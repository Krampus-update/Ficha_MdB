<?xml version="1.0" encoding="UTF-8"?>
<form name="frmFichaRPGmeister11_svg" align="client" theme="dark">
<rectangle class="fundo" align="client" color="black" strokeColor="white" strokeSize="1">


<!-- trocar Form por isso e ajustar os campos

<rectangle class="fundo">
	<scrollBox align="client">
		<flowLayout class="tile" align="top" height="500" margins="{left=10, right=10, top=10}" autoHeight="true" horzAlign="center" lineSpacing="2" name="fraXLayout">

		</flowLayout>
	</scrollBox>
</rectangle>

 -->

	<script>
		<![CDATA[
			local function recursiveFindControls(node, controlsList)
				local children = node:getChildren();
				if node:getClassName() == "recordList" then
					children = rclKids(node);
					--write(children[1]:getClassName());

					children = rclKids(children[1]);
				end;
				for i=1, #children, 1 do
					controlsList[#controlsList+1] = children[i];
					recursiveFindControls(children[i], controlsList);
				end;
			end;

			function rclKids(rcl)
				local ret = {};
				local i;
				local childCount = _obj_getProp(rcl.handle, "ChildrenCount");
				local child;
				local childHandle;
				local idxDest = 1;
					
				for i = 0, childCount - 1, 1 do
					childHandle = _gui_getChild(rcl.handle, i);
					
					if (childHandle ~= nil) then							
						child = GUI.fromHandle(childHandle);
						
						if (type(child) == "table") then							
							ret[idxDest] = child;
							idxDest = idxDest + 1;
						end
					end;	
				end
				
				return ret;
			end;

			local function findAllControls()
				local controlsList = {self};
				recursiveFindControls(self, controlsList);
				
				return controlsList;
			end;

			local function filterByClass(className, controls)
				local controlsFromClass = {};

				for i=1, #controls, 1 do
					if controls[i]:getClassName() == className then
						controlsFromClass[#controlsFromClass + 1] = controls[i];
					end;
				end;

				return controlsFromClass;
			end;

			local function findClass(className)
				local controls = findAllControls();
				return filterByClass(className, controls);
			end;

		]]>	
	</script>

	<template name="colorSelection">
		<label left="0" top="$(top)" width="90" height="20" text="$(place): " horzTextAlign="center"/>
		<comboBox left="95" top="$(top)" width="90" field="$(field)" items="{ '', 'White', 'Black', 'BlueViolet', 'Red', 'Violet','Orange' }" values="{ '', '#FFFFFF', '#060500', '#6B5794', '#A52A2A', '#b433ff' }"/>	
	</template>

    <scrollBox align="client">

		<layout left="10" top="10" width="500" height="600" frameStyle="frames/panel3transp/frame.xml">
        <image left="10" top="10" width="480" height="580" src="images/Mesa_do_Bolo.png" style="stretch" optimize="true" compilerOrder="0"/>
		</layout>

		<layout left="525" top="10" width="200" height="220" frameStyle="frames/panel3transp/frame.xml">
			<label left="0" top="10" width="200" height="20" text="Programador e Revisão:" horzTextAlign="center"/>
			<label left="0" top="30" width="200" height="20" text="Samael (Zambrakas)" horzTextAlign="center"/>
			<label left="0" top="50" width="200" height="20" text="Krampus (Krampus)" horzTextAlign="center"/>

			<label left="0" top="80" width="200" height="20" text="Arte:" horzTextAlign="center"/>
			<label left="0" top="100" width="200" height="20" text="Samael (Zambrakas)" horzTextAlign="center"/>

			<label left="0" top="130" width="200" height="20" text="Ficha feita para a mesa: " horzTextAlign="center"/>
			<label left="0" top="150" width="200" height="20" text="Mesa do Bolo" horzTextAlign="center"/>
			<label left="0" top="170" width="200" height="20" text="Mesa da Veia" horzTextAlign="center"/>
			<label left="0" top="190" width="200" height="20" text="Tales Of Alpha" horzTextAlign="center"/>
			<label left="0" top="210" width="200" height="20" text=" " horzTextAlign="center"/>
		</layout>

		<layout left="525" top="250" width="200" height="150" frameStyle="frames/panel3transp/frame.xml">
			<label left="0" top="10" width="80" height="20" text="Tema:" horzTextAlign="center"/>
			<comboBox left="95" top="10" width="90" field="theme" fontColor="white" items="{'Escuro',}" horzTextAlign="center"/>
			<dataLink field="theme" defaultValue="Escuro">
				<event name="onChange">
					if sheet == nil then return end;
					local theme = sheet.theme;
					if theme == "Claro" then
						theme = "light";
					else
						theme = "dark";
					end;

					local forms = findClass("form");

					for i=1, #forms, 1 do 
						forms[i].theme = theme;
					end;
				</event>
			</dataLink>
			<label left="0" top="35" width="90" height="20" text="Cores: " horzTextAlign="center"/>
			<label left="0" top="60" width="90" height="20" text="Fundo " horzTextAlign="center"/>
			<colorSelection top="60" field="colorBackground" place="Fundo: "/>
			<dataLink field="colorBackground" defaultValue="#505050">
		        <event name="onChange">
		            if sheet==nil then return end;
					local color = sheet.colorBackground or "#505050";

		            local rectangles = findClass("rectangle");

					for i=1, #rectangles, 1 do 
						rectangles[i].color = color;
					end;
		        </event>
			</dataLink>

			<label left="0" top="85" width="90" height="20" text="Linhas " horzTextAlign="center"/>
			<colorSelection top="85" field="colorStroke"/>
			<dataLink field="colorStroke" defaultValue="#FFFFFF">
		        <event name="onChange">
		            if sheet==nil then return end;
					local strokeColor = sheet.colorStroke or "#FFFFFF";

		            local rectangles = findClass("rectangle");
		            local horzLines = findClass("horzLine");

					for i=1, #rectangles, 1 do 
						rectangles[i].strokeColor = strokeColor;
					end;
					for i=1, #horzLines, 1 do 
						horzLines[i].strokeColor = strokeColor;
					end;
		        </event>
		    </dataLink>

			<label left="0" top="110" width="90" height="20" text="Fonte" horzTextAlign="center"/>
			<colorSelection top="110" field="colorFont"/>
			<dataLink field="colorFont" defaultValue="#FFFFFF">
		        <event name="onChange">
		            if sheet==nil then return end;
					local fontColor = sheet.colorFont or "#FFFFFF";

					local controls = findAllControls();
					
					local edits = filterByClass("edit", controls);
					for i=1, #edits, 1 do 
						edits[i].fontColor = fontColor;
					end;

					local labels = filterByClass("label", controls);
					for i=1, #labels, 1 do 
						labels[i].fontColor = fontColor;
					end;

					local comboBoxs = filterByClass("comboBox", controls);
					for i=1, #comboBoxs, 1 do 
						comboBoxs[i].fontColor = fontColor;
					end;

					local textEditors = filterByClass("textEditor", controls);
					for i=1, #textEditors, 1 do 
						textEditors[i].fontColor = fontColor;
					end;

					local checkBoxs = filterByClass("checkBox", controls);
					for i=1, #checkBoxs, 1 do 
						checkBoxs[i].fontColor = fontColor;
					end;

					local buttons = filterByClass("button", controls);
					for i=1, #buttons, 1 do 
						buttons[i].fontColor = fontColor;
					end;
		        </event>
		    </dataLink>
		</layout>

		<layout left="740" top="10" width="500" height="600" frameStyle="frames/panel3transp/frame.xml">
			<label left="0" top="560" width="500" height="20" text="ANOTAÇÕES DO MESTRE" horzTextAlign="center"/>
			<textEditor left="30" top="20" width="440" height="530" class="transparente vcenter" field="anotacoes_do_mestre"/>
		</layout>

		<layout left="525" top="420" width="200" height="190" frameStyle="frames/panel3transp/frame.xml">
			<label left="50" top="30" width="200" height="20" text="CONHEÇA A MESA:" fontSize="11"/>
			<button left="20" top="70" width="80" text="Atualizar" onClick="GUI.openInBrowser(' ')"/>
			<button left="20" top="100" width="80" text="Discord" onClick="GUI.openInBrowser('https://discord.gg/yc9jCvKE3t');"/>
			<button left="20" top="130" width="80" text="Zap (Mesa)" onClick="GUI.openInBrowser('https://chat.whatsapp.com/BuFcGPgSRNqGwHlMHmFxE5');"/>
			<button left="100" top="70" width="80" height="20" text="Exportar">
				<event name="onClick">
					local xml = NDB.exportXML(sheet);

					local export = {};
					local bytes = Utils.binaryEncode(export, "utf8", xml);

					local stream = Utils.newMemoryStream();
					local bytes = stream:write(export);

					Dialogs.saveFile("Salvar Ficha como XML", stream, "ficha.xml", "application/xml",
						function()
							stream:close();
							showMessage("Ficha Exportada.");
						end);
				</event>
			</button>
			<button left="100" top="100" width="80" height="20" text="Importar">
				<event name="onClick">
					Dialogs.openFile("Importar Ficha", "application/xml", false, 
						function(arquivos)
							local arq = arquivos[1];

							local import = {};
							local bytes = arq.stream:read(import, arq.stream.size);

							local xml = Utils.binaryDecode(import, "utf8");

							NDB.importXML(sheet, xml);
						end);
				</event>
			</button>
		</layout>
    </scrollBox>
</rectangle> 
</form>